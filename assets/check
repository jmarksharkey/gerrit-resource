#!/bin/sh
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname $0)/common.sh

# for jq
PATH=/usr/local/bin:$PATH

payload=$TMPDIR/gerrit-resource-request

cat > $payload <&0
echo $payload

load_pubkey $payload

hostname=$(jq -r '.source.hostname // ""' < $1)
port=$(jq -r '.source.port // 29418' < $1)
username=$(jq -r '.source.username // ""' < $1)
project=$(jq -r '.source.project // ""' < $1)
branch=$(jq -r '.source.branch // ""' < $1)
ref=$(jq -r '.version.ref // ""' < $payload)

# Check for any open changes that have been made to the project
query="status:open"
append_to_query() {
    if [ -n "$2" ]; then
        query="$query $1:$2"
    fi
}
append_to_query 'branch' $branch
append_to_query 'project' $project

if [ -n "$ref" ]; then
    last_time=$(ssh $hostname -p $port -l $username gerrit query $query commit:$ref --format=TEXT --current-patch-set | grep '^    createdOn' | cut -d ':' -f 2-)
    append_to_query 'since' $last_time
fi

result=$(ssh $hostname -p $port -l $username gerrit query $query --format=JSON --current-patch-set | jq -s 'sort_by(.currentPatchSet.createdOn) | .[].currentPatchSet.revision | select(. != null)' | jq -s 'map({ref: .})')
echo "$result"
echo "$result" >&3
